apply plugin: 'android-library'
apply plugin: 'maven-publish'

repositories{
    mavenCentral()
}

dependencies {
    //compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.tojc.ormlite.android:ormlite-content-provider-library:1.0.4@aar"
    // TODO: Why gradle does not solves this dependency?
    compile "com.j256.ormlite:ormlite-core:4.+"
    compile "com.j256.ormlite:ormlite-android:4.+"
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion defaultConfigMinSdkVersion
        targetSdkVersion defaultConfigTargetSdkVersion
        versionCode 1
        versionName project.version
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    // Note that most of the configuration of the Build Type do not apply to library projects.
    // http://tools.android.com/tech-docs/new-build-system/user-guide#TOC-Differences-between-a-Project-and-a-Library-Project
    buildTypes {
        debug {
            debuggable true
        }
        release {
            debuggable false
        }
    }
}

commonlibrary {
    apply project, "addTaskArtifactAar"
    apply project, "addTaskArtifactApklib"
    apply project, "addTaskArtifactJar"
    //apply project, "addTaskArtifactJavadocJar"
    //apply project, "addTaskArtifactSourceJar"
}

// http://www.gradle.org/docs/current/userguide/publishing_maven.html
// http://www.flexlabs.org/2013/06/using-local-aar-android-library-packages-in-gradle-builds
// http://www.rickcarragher.com/blog/2014/01/21/gradle-and-android

// gradlew clean build publish

artifacts {
    afterEvaluate {
        archives packageArtifactReleaseAar
        archives packageArtifactReleaseApklib
        archives packageArtifactReleaseJar
        //archives packageArtifactReleaseSourceJar
        //archives packageArtifactReleaseJavadocJar
    }
}

android.libraryVariants
publishing {
    publications {
        releaseArtifact(MavenPublication) {
            afterEvaluate {
                artifact packageArtifactReleaseAar
                artifact packageArtifactReleaseApklib
                artifact packageArtifactReleaseJar
                //artifact packageArtifactReleaseSourceJar
                //artifact packageArtifactReleaseJavadocJar
            }
        }
    }
    repositories {
        maven {
            url(mavenRepository)
        }
    }
}
